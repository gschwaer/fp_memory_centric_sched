/* ###*B*###
 * Erika Enterprise, version 3
 * 
 * Copyright (C) 2017 - 2019 Evidence s.r.l.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License, version 2, for more details.
 * 
 * You should have received a copy of the GNU General Public License,
 * version 2, along with this program; if not, see
 * <www.gnu.org/licenses/old-licenses/gpl-2.0.html >.
 * 
 * This program is distributed to you subject to the following
 * clarifications and special exceptions to the GNU General Public
 * License, version 2.
 * 
 * THIRD PARTIES' MATERIALS
 * 
 * Certain materials included in this library are provided by third
 * parties under licenses other than the GNU General Public License. You
 * may only use, copy, link to, modify and redistribute this library
 * following the terms of license indicated below for third parties'
 * materials.
 * 
 * In case you make modified versions of this library which still include
 * said third parties' materials, you are obligated to grant this special
 * exception.
 * 
 * The complete list of Third party materials allowed with ERIKA
 * Enterprise version 3, together with the terms and conditions of each
 * license, is present in the file THIRDPARTY.TXT in the root of the
 * project.
 * ###*E*### */

/** \file	conf.oil
 *  \brief	System Configuration.
 *
 *  This file contains the System Configuration for Erika Enterprise.
 *
 *  \author	Giuseppe Serano
 *  \date	2018
 */

CPU mySystem {

  OS myOs {
    EE_OPT = "OS_EE_APPL_BUILD_DEBUG";
    EE_OPT = "OS_EE_BUILD_DEBUG";
//    EE_OPT = "OS_EE_VERBOSE";

    CPU_DATA = CORTEX_M {
      MODEL = M4;
      MULTI_STACK = TRUE;
      IDLEHOOK = TRUE {
        HOOKNAME = "idle_hook";
      };
      EXECUTE_FROM_RAM = TRUE;
      TRACER = OFFCHIP;
    };

    MCU_DATA = S32K1XX {
      MODEL = S32K148;
    };

    BOARD_DATA = S32K148EVB_Q144_Q176;

    LIB = S32_SDK {
      /* Used to select Board: S32K148EVB-Q144-Q176 */
      BOARD = S32K148EVB_Q144_Q176;
      /* Used to select library version. */
      VERSION = "0.8.6 EAR";
      /* Create libs32sdk.a */
      STAND_ALONE = TRUE;
    };

    STATUS = EXTENDED;
    STARTUPHOOK = TRUE;
    ERRORHOOK = FALSE;
    SHUTDOWNHOOK = FALSE;
    PRETASKHOOK = FALSE;
    POSTTASKHOOK = FALSE;
    USEGETSERVICEID = FALSE;
    USEPARAMETERACCESS = FALSE;
    USERESSCHEDULER = TRUE;

    USEORTI = TRUE;

    KERNEL_TYPE = OSEK {
      CLASS = BCC1;
    };
  };

  APPDATA myApp {
    APP_SRC  = "code.c";
    APP_SRC  = "hal.c";
  };

  APPMODE ModeIncrement;
  APPMODE ModeDecrement;

  TASK LowTask {
    PRIORITY = 0x01;
    ACTIVATION = 1;
    SCHEDULE = FULL;
    AUTOSTART = FALSE;
    STACK = SHARED;
    RESOURCE = Resource;
  };

  TASK HighTask {
    PRIORITY = 0x02;
    ACTIVATION = 1;
    SCHEDULE = FULL;
    AUTOSTART = TRUE { APPMODE=ModeIncrement; };
    STACK = SHARED;
    RESOURCE = Resource;
  };

  RESOURCE Resource { RESOURCEPROPERTY = STANDARD; };

  ISR TimerISR {
    CATEGORY = 2;
    SOURCE = "FTM0_OVF_RELOAD";
    PRIORITY = 1;
  };

  ISR ButtonsISR {
    CATEGORY = 2;
    SOURCE   = "PORTC";
    PRIORITY = 2;
  };

};
