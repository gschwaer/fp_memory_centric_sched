/* ###*B*###
 * Erika Enterprise, version 3
 * 
 * Copyright (C) 2017 - 2019 Evidence s.r.l.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License, version 2, for more details.
 * 
 * You should have received a copy of the GNU General Public License,
 * version 2, along with this program; if not, see
 * <www.gnu.org/licenses/old-licenses/gpl-2.0.html >.
 * 
 * This program is distributed to you subject to the following
 * clarifications and special exceptions to the GNU General Public
 * License, version 2.
 * 
 * THIRD PARTIES' MATERIALS
 * 
 * Certain materials included in this library are provided by third
 * parties under licenses other than the GNU General Public License. You
 * may only use, copy, link to, modify and redistribute this library
 * following the terms of license indicated below for third parties'
 * materials.
 * 
 * In case you make modified versions of this library which still include
 * said third parties' materials, you are obligated to grant this special
 * exception.
 * 
 * The complete list of Third party materials allowed with ERIKA
 * Enterprise version 3, together with the terms and conditions of each
 * license, is present in the file THIRDPARTY.TXT in the root of the
 * project.
 * ###*E*### */

/** \file   conf.oil
 *  \brief  System Configuration.
 *
 *  This file contains the System Configuration for Erika Enterprise.
 *
 *  \author  Claudio Scordino
 *  \date    2019
 */
CPU mySystem {
	OS myOs {
		LIB = ETHERCAT_SOEM {
		/* Used to select library version. */
			VERSION = "1.0";
			/* Create libsoem.a */
			STAND_ALONE = TRUE;
		};

		/* EE_OPT = "OS_EE_VERBOSE"; */
		EE_OPT = "OSEE_DEBUG";
		EE_OPT = "OS_EE_APPL_BUILD_DEBUG";
		EE_OPT = "OS_EE_BUILD_DEBUG";
		EE_OPT = "OSEE_ASSERT";
		CPU_DATA = X86_64 {
			PLATFORM = BARE;
			MULTI_STACK = TRUE;
			COMPILER = GCC;
			IDLEHOOK = TRUE {
				HOOKNAME = "idle_hook";
			};
			INT_CONTROLLER = X2APIC {
				X2APIC_MODE = TSC_DEADLINE;
			};
			ENABLE_INTEL_I210_DRIVER = TRUE {
				USE_MSIX = TRUE;
			};
		};
		KERNEL_TYPE = OSEK {
			CLASS = ECC1;
		};
	};
	
	COUNTER SystemTimer {
		MINCYCLE = 1;
		MAXALLOWEDVALUE = 2147483647;
		TICKSPERBASE = 1;
		TYPE = HARDWARE {
			SYSTEM_TIMER = TRUE;
			PRIORITY = 1;
			DEVICE = "APIC_TIMER";
		};
		SECONDSPERTICK = 0.001;
	};
	
	EVENT SleepEvent {
		MASK = AUTO;
	};
	
	TASK Task1 {
		PRIORITY = 1;
		SCHEDULE = FULL;
		AUTOSTART = TRUE;
		STACK = PRIVATE {
			SIZE = 128000;
		};
		EVENT = SleepEvent;
		RESOURCE = PortLock;
	};
	
	ALARM SleepAlarm {
		COUNTER = SystemTimer;
		ACTION = SETEVENT {
			TASK = Task1;
			EVENT = SleepEvent;
		};
		AUTOSTART = FALSE;
	};
	
	APPDATA x86_64_ethercat_master {
		APP_SRC = "main.c";
	};
	
	RESOURCE PortLock { RESOURCEPROPERTY = STANDARD; };
};
