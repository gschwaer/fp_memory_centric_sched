<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
  ###*B*###
  Erika Enterprise, version 3
  
  Copyright (C) 2017 - 2019 Evidence s.r.l.
  
  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or (at
  your option) any later version.
  
  This program is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  General Public License, version 2, for more details.
  
  You should have received a copy of the GNU General Public License,
  version 2, along with this program; if not, see
  <www.gnu.org/licenses/old-licenses/gpl-2.0.html >.
  
  This program is distributed to you subject to the following
  clarifications and special exceptions to the GNU General Public
  License, version 2.
  
  THIRD PARTIES' MATERIALS
  
  Certain materials included in this library are provided by third
  parties under licenses other than the GNU General Public License. You
  may only use, copy, link to, modify and redistribute this library
  following the terms of license indicated below for third parties'
  materials.
  
  In case you make modified versions of this library which still include
  said third parties' materials, you are obligated to grant this special
  exception.
  
  The complete list of Third party materials allowed with ERIKA
  Enterprise version 3, together with the terms and conditions of each
  license, is present in the file THIRDPARTY.TXT in the root of the
  project.
  ###*E*###
  -->

<evidence_example version="1" ID="rh850_renesas_mc">

  <category>RH850/G4MH</category>
  <title>ErikaSyncMultiCore</title>

  <small_descr>
    Renesas RH850 ERIKA3 Multicore example
  </small_descr>

  <long_descr>
    Two cores demo. Each core has a System Timer Counter driven by OSTM0
    (so all the counters are hardware synchronized). On each core a TASK at
    500ms is scheduled by an ALARM on System Timer counter,
    the tasks synchronize themselves on a software barrier, the last TASK that
    leave the barrier toggle a specific LED. Just to play with resource
    contentions.
  </long_descr>

  <file_section>
    <file     name="cfg/r_boot_cfg.c"/>
    <file     name="cfg/r_peid0_cfg.c"/>
    <file     name="cfg/r_peid1_cfg.c"/>
    <file     name="cfg/r_port_cfg.c"/>
    <file     name="cfg/r_prj_cfg.h"/>
    <file     name="src/r_peid0.h"/>
    <file     name="src/r_peid1.h"/>
    <file     name="src/r_synch.h"/>
    <file     name="src/r_prj.h"/>
    <file     name="src/r_main.c"/>
    <file     name="src/r_peid0.c"/>
    <file     name="src/r_peid1.c"/>
    <file     name="src/r_synch.c"/>

    <!-- <file     name="appl.oil"/> -->
    <file     name="conf_r7f702z04.oil" flags="appl_conf"/>
    <!-- <file     name="os.oil"/> -->
    <file     name="makefile"/>
  </file_section>
</evidence_example>
