/* ###*B*###
 * Erika Enterprise, version 3
 * 
 * Copyright (C) 2017 - 2019 Evidence s.r.l.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License, version 2, for more details.
 * 
 * You should have received a copy of the GNU General Public License,
 * version 2, along with this program; if not, see
 * <www.gnu.org/licenses/old-licenses/gpl-2.0.html >.
 * 
 * This program is distributed to you subject to the following
 * clarifications and special exceptions to the GNU General Public
 * License, version 2.
 * 
 * THIRD PARTIES' MATERIALS
 * 
 * Certain materials included in this library are provided by third
 * parties under licenses other than the GNU General Public License. You
 * may only use, copy, link to, modify and redistribute this library
 * following the terms of license indicated below for third parties'
 * materials.
 * 
 * In case you make modified versions of this library which still include
 * said third parties' materials, you are obligated to grant this special
 * exception.
 * 
 * The complete list of Third party materials allowed with ERIKA
 * Enterprise version 3, together with the terms and conditions of each
 * license, is present in the file THIRDPARTY.TXT in the root of the
 * project.
 * ###*E*### */

/** \file   conf.oil
 *  \brief  System Configuration.
 *
 *  This file contains the System Configuration for Erika Enterprise.
 *
 *  \author  Errico Guidieri
 *  \date    2018
 */

CPU test_application {
  OS EE {
    EE_OPT = "OSEE_DEBUG";
    EE_OPT = "OSEE_ASSERT";
    EE_OPT = "OS_EE_APPL_BUILD_DEBUG";
    EE_OPT = "OS_EE_BUILD_DEBUG";

    CFLAGS = "-I ../../src";
    CFLAGS = "-I ../../cfg";

    CPU_DATA = RH850 {
      ID = 0x0;
      COMPILER = DIAB;
      MULTI_STACK = FALSE;
      IDLEHOOK = TRUE {
        HOOKNAME = "R_PEID0_RunBckgrndHook";
      };
    };

    CPU_DATA = RH850 {
      ID = 0x1;
      IDLEHOOK = TRUE {
        HOOKNAME = "R_PEID1_RunBckgrndHook";
      };
    };

    MCU_DATA = RH850_G4MH {
      DERIVATIVE = "r7f702z04";
      EIINT_CHANNELS = 512;
    };

    LIB = EMBARK_G4MH;

    STATUS = EXTENDED;
    USERESSCHEDULER = FALSE;
    USEORTI = TRUE;

    KERNEL_TYPE = OSEK {
      CLASS = BCC1;
    };
  };

  APPDATA ErikaSyncMultiCore {
    APP_SRC = "cfg/r_boot_cfg.c";
    APP_SRC = "cfg/r_peid0_cfg.c";
    APP_SRC = "cfg/r_peid1_cfg.c";
    APP_SRC = "cfg/r_port_cfg.c";
    APP_SRC = "src/r_synch.c";
    APP_SRC = "src/r_main.c";
    APP_SRC = "src/r_peid0.c";
    APP_SRC = "src/r_peid1.c";
  };

  COUNTER system_timer_core0_10ms {
    CPU_ID = 0x0;
    MINCYCLE = 1;
    MAXALLOWEDVALUE = 2147483647;
    TICKSPERBASE = 1;
    SECONDSPERTICK = 0.01;
    TYPE = HARDWARE {
      PRIORITY = 1;
      DEVICE = "18";
      SYSTEM_TIMER = TRUE;
    };
  };

  COUNTER system_timer_core1_10ms {
    CPU_ID = 0x1;
    MINCYCLE = 1;
    MAXALLOWEDVALUE = 2147483647;
    TICKSPERBASE = 1;
    SECONDSPERTICK = 0.01;
    TYPE = HARDWARE {
      PRIORITY = 1;
      DEVICE = "18";
      SYSTEM_TIMER = TRUE;
    };
  };

  TASK R_PEID0_Task500ms {
    CPU_ID = 0x0;
    PRIORITY = 2;
    AUTOSTART = FALSE;
    STACK = SHARED;
  };

  TASK R_PEID0_TaskConcAct {
    CPU_ID = 0x0;
    PRIORITY = 1;
    AUTOSTART = FALSE;
    STACK = SHARED;
  };

  TASK R_PEID1_Task500ms {
    CPU_ID = 0x1;
    PRIORITY = 1;
    AUTOSTART = FALSE;
    STACK = SHARED;
  };

  ALARM AlarmTaskCore0_500ms {
    COUNTER = system_timer_core0_10ms;
    ACTION = ACTIVATETASK {
      TASK = R_PEID0_Task500ms;
    };
    AUTOSTART = TRUE {
      ALARMTIME = 50;
      CYCLETIME = 50;
    };
  };

  ALARM AlarmTaskCore1_500ms {
    COUNTER = system_timer_core1_10ms;
    ACTION = ACTIVATETASK {
      TASK = R_PEID1_Task500ms;
    };
    AUTOSTART = TRUE {
      ALARMTIME = 50;
      CYCLETIME = 50;
    };
  };

};
