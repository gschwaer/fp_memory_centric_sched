/* ###*B*###
 * Erika Enterprise, version 3
 * 
 * Copyright (C) 2017 - 2018 Evidence s.r.l.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License, version 2, for more details.
 * 
 * You should have received a copy of the GNU General Public License,
 * version 2, along with this program; if not, see
 * < www.gnu.org/licenses/old-licenses/gpl-2.0.html >.
 * 
 * This program is distributed to you subject to the following
 * clarifications and special exceptions to the GNU General Public
 * License, version 2.
 * 
 * THIRD PARTIES' MATERIALS
 * 
 * Certain materials included in this library are provided by third
 * parties under licenses other than the GNU General Public License. You
 * may only use, copy, link to, modify and redistribute this library
 * following the terms of license indicated below for third parties'
 * materials.
 * 
 * In case you make modified versions of this library which still include
 * said third parties' materials, you are obligated to grant this special
 * exception.
 * 
 * The complete list of Third party materials allowed with ERIKA
 * Enterprise version 3, together with the terms and conditions of each
 * license, is present in the file THIRDPARTY.TXT in the root of the
 * project.
 * ###*E*### */

/** \file   conf.oil
 *  \brief  System Configuration.
 *
 *  This file contains the System Configuration for Erika Enterprise.
 *
 *  \author  Luca Cuomo
 *  \date    2018
 */

// Eclipse Setup:
// ==============
// Project Properties > Oil > Erika Files Location: Manual "<path in your FS>/Erika_DPREM/ee_files"
// Project Properties > Oil > Generator properties:
// * Enable project specific settings
// * AArch64 - Compiler prefix: aarch64-linux-gnu-
// * AArch64 - Jailhouse dir: <path in your FS>/jailhouse-master
// * AArch64 - Jailhouse version: 0.9.1
// Project Properties > C/C++ General > Preprocessor Include Paths, Macros etc.:
// Under Entries > GNU C > CDT User Settings Entries:
// Add the following as Include Directory, File System Path:
// - /usr/lib/gcc-cross/aarch64-linux-gnu/7/include
// - <path in your FS>/jailhouse-master/hypervisor
// - <path in your FS>/jailhouse-master/hypervisor/include
// - <path in your FS>/jailhouse-master/hypervisor/arch/arm64/include
// - <path in your FS>/jailhouse-master/hypervisor/arch/arm-common/include
// - <path in your FS>/jailhouse-master/include
// - <path in your FS>/jailhouse-master/include/arch/arm64
// - <path in your FS>/jailhouse-master/include/inmates/lib
// - <path in your FS>/jailhouse-master/include/inmates/lib/arm64/include
// - <path in your FS>/jailhouse-master/include/inmates/lib/arm-common/include

CPU mySystem {

  OS myOs {

    //EE_OPT = "OS_EE_VERBOSE";
    EE_OPT = "OSEE_DEBUG";
    EE_OPT = "OS_EE_APPL_BUILD_DEBUG";
    EE_OPT = "OS_EE_BUILD_DEBUG";

    /* Access ERIKA's internals */
    CFLAGS = "-I../erika/src";
    
    /* Access Jailhouse' internals */
    CFLAGS = "-I../jailhouse-master_dprem/inmates/lib";
    CFLAGS = "-I../jailhouse-master_dprem/hypervisor";
	CFLAGS = "-I../jailhouse-master_dprem/hypervisor/include";
	CFLAGS = "-I../jailhouse-master_dprem/hypervisor/arch/arm64/include";
	CFLAGS = "-I../jailhouse-master_dprem/hypervisor/arch/arm-common/include";
	CFLAGS = "-I../jailhouse-master_dprem/include";
	CFLAGS = "-I../jailhouse-master_dprem/include/arch/arm64";
	CFLAGS = "-I../jailhouse-master_dprem/include/inmates/lib";
	CFLAGS = "-I../jailhouse-master_dprem/include/inmates/lib/arm64/include";
	CFLAGS = "-I../jailhouse-master_dprem/include/inmates/lib/arm-common/include";

    CPU_DATA = AARCH64 {
      MULTI_STACK = TRUE;
      COMPILER = GCC;
      IDLEHOOK = TRUE {
        HOOKNAME = "idle_hook";
      };
    };

    SOC_DATA = NVIDIA_TEGRA_X2;

    USEDYNAMICAPI = TRUE {
      TASK_ARRAY_SIZE     = 8;
      SN_ARRAY_SIZE       = 8;
      STACKS_MEMORY_SIZE  = 65536;//8192;
    };

    KERNEL_TYPE = OSEK {
      CLASS = ECC2;
//      RQ    = MQ;
    };
  };

  APPDATA aarch64_jailhouse_tegraX2_uart {
    APP_SRC = "main.c";
    APP_SRC = "uart-driver.c";
    APP_SRC = "printu.c";
    APP_SRC = "memory_prefetching.S";
    APP_SRC = "hardware_setup.S";
    APP_SRC = "benchmarking/app_data.c";
    APP_SRC = "benchmarking/average.c";
    APP_SRC = "benchmarking/sha.c";
    APP_SRC = "benchmarking/sha/sha.c";
    APP_SRC = "benchmarking/sha/memcpy.c";
    APP_SRC = "benchmarking/sha/memhelper.c";
    APP_SRC = "benchmarking/sha/memset.c";
  };
};
